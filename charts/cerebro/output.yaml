---
# Source: cerebro/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: test-cerebro
  labels:
    app: cerebro
    chart: cerebro-2.0.3
    release: test
    heritage: Helm
stringData:
  application.conf: |-
    secret = "4WoBSJT7NCMMidempAz9FbihNqV9HV1nvqriG0V8jPYOUD3SbCzCjQh8pmps5iH6"
    play.ws.ssl.loose.acceptAnyCertificate = false

    basePath = "/"

    pidfile.path = /dev/null

    rest.history.size = 50

    data.path = "/var/db/cerebro/cerebro.db"

    es = {
      gzip = true
    }

    auth = {
      # either basic or ldap
      type: ${?AUTH_TYPE}
      settings {
        # LDAP
        url = ${?LDAP_URL}
        base-dn = ${?LDAP_BASE_DN}
        method = ${?LDAP_METHOD}
        user-template = ${?LDAP_USER_TEMPLATE}
        bind-dn = ${?LDAP_BIND_DN}
        bind-pw = ${?LDAP_BIND_PWD}
        group-search {
          base-dn = ${?LDAP_GROUP_BASE_DN}
          user-attr = ${?LDAP_USER_ATTR}
          user-attr-template = ${?LDAP_USER_ATTR_TEMPLATE}
          group = ${?LDAP_GROUP}
        }

        # Basic auth
        username = ${?BASIC_AUTH_USER}
        password = ${?BASIC_AUTH_PWD}
      }
    }

    hosts = [
      
      {
        host = "https://es-cluster-es-http"
        name = "Jaeger ES"
        
        auth = {
          username = "test"
          password = "password"
        }
        
      }
    ]
---
# Source: cerebro/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-cerebro
  labels:
    app: cerebro
    chart: cerebro-2.0.3
    release: test
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: cerebro
    release: test
---
# Source: cerebro/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-cerebro
  labels:
    app: cerebro
    chart: cerebro-2.0.3
    release: test
    heritage: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: cerebro
      release: test
  template:
    metadata:
      labels:
        app: cerebro
        release: test
      annotations:
        checksum/config: dacee5e67f59490925981fda82f389bf15405eb32880332f2e136779a3350082
    spec:
      serviceAccountName: default
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: cerebro
          image: "lmenezes/cerebro:0.9.4"
          imagePullPolicy: IfNotPresent
          args: ["-Dconfig.file=/etc/cerebro/application.conf"]
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: db
              mountPath: /var/db/cerebro
            - name: config
              mountPath: /etc/cerebro
            - name: logs
              mountPath: /opt/cerebro/logs/
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
          resources:
            {}
      volumes:
        - name: db
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: config
          secret:
            secretName: test-cerebro
